package triggerApi;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import com.fasterxml.jackson.databind.ObjectMapper;

import io.restassured.RestAssured;
import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;



public class ExcelReader {
	
	static String jsonStr;

	public static void main(String[] args) throws IOException {

	File file = new File("C:\\Users\\583593\\Desktop\\583593\\InputData.xlsx");
	
	FileInputStream fls = new FileInputStream(file);
	
	Workbook wb = new XSSFWorkbook(fls);
	Sheet firstSheet = wb.getSheetAt(0);
	//Creating object To Read from row by row from excel
	Iterator <Row> iterator = firstSheet.iterator();
	//To check whether data is available or not
	while(iterator.hasNext())
	{
        //To read the data from first row
		Row row = iterator.next();
		//Create object of parent class of request
		Request request = new Request();
		//int i=0;
	 // request =Parent
	 // getReqData()=firstParameter 
	 // setDebug= first child in parameter
	 // row.getCell(0)= Get the cell from excel 
	 // getStringCellValue() = get the string value of that cell
		request.getReqData().setDebug(row.getCell(0).getStringCellValue());
		request.getReqData().setReqType(row.getCell(1).getStringCellValue());
		request.getReqData().setReqVersion(row.getCell(2).getStringCellValue());
		request.getReqData().setReqNoSeats(row.getCell(3).getStringCellValue());
		
		request.getReqData().getPosData().setPosOrig(row.getCell(4).getStringCellValue());
		request.getReqData().getPosData().setPosCountry(row.getCell(5).getStringCellValue());
		request.getReqData().getPosData().setPosCity(row.getCell(6).getStringCellValue());
		request.getReqData().getPosData().setPosGds(row.getCell(7).getStringCellValue());
		request.getReqData().getPosData().setPosPcc(row.getCell(8).getStringCellValue());
		request.getReqData().getPosData().setPosIata(row.getCell(9).getStringCellValue());
		
		//"ItnDatum" this parameter is an Array so we have to create object
		ItnDatum itnData = new ItnDatum();
		//Again the same above concept
		itnData.setItnNo(row.getCell(10).getStringCellValue());
		
		//"SegDatum" this parameter is an Array so we have to create object
		SegDatum segData = new SegDatum();
		//Again the same above concept
		segData.setSegNo(row.getCell(11).getStringCellValue());
		segData.setSegActnblInd(row.getCell(12).getStringCellValue());
		segData.setSegCrr(row.getCell(13).getStringCellValue());
		segData.setSegFltNo(row.getCell(14).getStringCellValue());
		segData.setSegOrgn(row.getCell(15).getStringCellValue());
		segData.setSegDstn(row.getCell(16).getStringCellValue());
		segData.setSegDeptDate(row.getCell(17).getStringCellValue());
		segData.setSegArvlDate(row.getCell(18).getStringCellValue());
		
		//Because "segData" Arrays comes under "itnData" Arrays
		itnData.getSegData().add(segData);
		
		//Because "itnData" Arrays comes under "ReqData" 
		request.getReqData().getItnData().add(itnData);
		
		 ObjectMapper Obj = new ObjectMapper(); 
		  
	        try { 
	  
	            // get Oraganisation object as a json string 
	             jsonStr = Obj.writeValueAsString(request); 
	  
	            // Displaying JSON String 
	            System.out.println(jsonStr); 
	        
	        } 
	  
	        catch (IOException e) { 
	            e.printStackTrace(); 
	        } 
		
	        RestAssured.baseURI ="http://146.216.237.149:31080";
	        RequestSpecification restassuredrequest = RestAssured.given().auth().preemptive().basic("admintester", "T3st@dmin0");
	        restassuredrequest.body(jsonStr);
	        Response restassuredresponse = restassuredrequest.post("/rtdp");
	        
	        
	        String responseStr =  restassuredresponse.getBody().asString();
	        System.out.println("Executed till here without any error" + responseStr);
	        ResponseParent response =    Obj.readValue(responseStr, ResponseParent.class);   
		   
	        
	        
	        List<ResponseItnDatum> responselist =  response.getRspData().getItnData();
	        
	        for(ResponseItnDatum itdatum: responselist) {
	        	
	        	List<ResponseOdDatum> oddatum = itdatum.getOdData();
	        	
	        	for (ResponseOdDatum oddat:oddatum)
	        		
	        	{
	        		
	        		List<ResponseOdClsDatum> OdClsData = oddat.getOdClsData();
	        		
	        		for (ResponseOdClsDatum odcls: OdClsData) {
	        			
	        			if(odcls.getDdCmpDiscountFactor()!=null && !odcls.getDdCmpDiscountFactor().isEmpty())
	        				
	        			{
	        				System.out.println(odcls.getOdClsCode());
	        			}
	        		}
	        		
	        	}
	        }
	        
	        
	        
	        
	        
//		//This is to iterator the column
//		Iterator<Cell> celliterator = row.iterator();
//		// this is just to check values in column
//		while(celliterator.hasNext())
//		{
//			System.out.println(celliterator.next());
//		}
	}
	
	}
}